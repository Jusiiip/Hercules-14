-	script	Run Or Die	FAKENPC,{
OnEnter:
	if ( getgmlevel() >= 99 ) { // gm level to bypass the registration
		warp "guild_vs5", 0,0;
		end;
	}
	if ( queuesize( getvariableofnpc( .qid, "runordie" ) ) >= 100 ) { // 100 participant max
		mes "[Run Or Die]";
		mes "I'm sorry, the room is full";
		close;
	}
	percentheal 100, 100;
	warp "guild_vs5", 0,0;
	queueadd getvariableofnpc( .qid, "runordie" ), getcharid(3);
	end;
}

-	script	runordie	FAKENPC,{
OnInit:
	//disablenpc "Run Or Die";
	if ( QUEUEOPT_MAPCHANGE != 3 ) end; //stop the script if the server is outdated
	bindatcmd "runordie", strnpcinfo(0)+"::OnStart", 99,100;
	.onesec = 1000; // use for script debugging... set to 100 to make the announcement run faster
	end;
OnStart:
OnStartRoD: // set your time here
	donpcevent "eventmanager::OnStartEvent";
	mapwarp "guild_vs5", "veil",119,104;
	killmonsterall "guild_vs5";
	.start = true;
	.qid = queue();
	queueopt .qid, QUEUEOPT_DEATH, strnpcinfo(0)+"::OnDeath";
	queueopt .qid, QUEUEOPT_LOGOUT, strnpcinfo(0)+"::OnQuit";
	queueopt .qid, QUEUEOPT_MAPCHANGE, strnpcinfo(0)+"::OnMapChange";
		
	announce "[ Event Manager ]: The Run Or Die Event will begin in 1 minute. Use @joinevent to join.",bc_all|bc_blue;
	sleep 60000;
	
	donpcevent "eventmanager::OnCloseJoinEvent";
	announce "[ Event Manager ]: The Run Or Die Event has begun! Registration is now closed.",bc_all|bc_blue;

	if ( queuesize(.qid) < 2 ) { // cannot start event if nobody joins(0) or just having (1) player
		donpcevent "eventmanager::OnEndEvent";
		mapannounce "guild_vs5", "[ Event Manager ]: Not enough player for Run Or Die Event.", bc_all|bc_blue;
		mapwarp "guild_vs5", "veil", 119,104;
		queuedel .qid;
		.start = false;
		end;
	}
	mapannounce "guild_vs5", "Welcome to Run Or Die event", bc_map;
	sleep 3 * .onesec;
	mapannounce "guild_vs5", "This is an easy event", bc_map;
	sleep 3 * .onesec;
	mapannounce "guild_vs5", "Just stay AWAY from anything that you think its DANGEROUS!!", bc_map;
	sleep 3 * .onesec;
	mapannounce "guild_vs5", "Stay alive as long as YOU CAN!!!!", bc_map;
	sleep 3 * .onesec;
	mapannounce "guild_vs5", "The LAST SURVIVOR will be the WINNER", bc_map;
	sleep 3 * .onesec;
	mapannounce "guild_vs5", "event will start in 3", bc_map;
	sleep 1 * .onesec;
	mapannounce "guild_vs5", "2...", bc_map;
	sleep 1 * .onesec;
	mapannounce "guild_vs5", "1...", bc_map;
	sleep 1 * .onesec;
	mapannounce "guild_vs5", "Its time to run !!", bc_map;
	while ( .start ) {
		.@more += rand(1,2);
		monster "guild_vs5", 0,0, "Come On Baby!!!", BOMBPORING, 2 + .@more, "", 0;
		monster "guild_vs5", 0,0, "Come On Baby!!!", BOMBPORING, 2 + .@more, "", 1;
		monster "guild_vs5", 0,0, "Come On Baby!!!", BOMBPORING, 2 + .@more, "", 2;
		sleep 5000;
	}
	end;
OnMapChange:
	if ( @Queue_Destination_Map$ == "guild_vs5" ) end;
OnDeath:
OnQuit:
	queueremove .qid, getcharid(3);
	if ( queuesize(.qid) > 1 ) end;
	.start = false;
	killmonsterall "guild_vs5";
	.@it = queueiterator(.qid);
	.@aid = qiget(.@it);
	qiclear .@it;
	donpcevent "eventmanager::OnEndEvent";
	getitem 12281, 2, .@aid; // winner prize
	queuedel .qid;
	sleep 5000;
	mapwarp "guild_vs5", "veil", 119,104;
	end;
}

guild_vs5	mapflag	nowarp
guild_vs5	mapflag	nowarpto
guild_vs5	mapflag	noteleport
guild_vs5	mapflag	nosave	SavePoint
guild_vs5	mapflag	nomemo
guild_vs5	mapflag	nopenalty
guild_vs5	mapflag	noicewall
//guild_vs5	mapflag	nobranch