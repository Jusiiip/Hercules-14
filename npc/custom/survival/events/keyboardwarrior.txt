veil,164,164,4	script	Keyboard Warrior Fairy	4_M_FARIYKING,{
	function string_random;
	mes "[Keyboard Warrior Fairy]";
	mes "I organize Keyboard Warrior Event.";
	mes " ";
	mes "Refer Event Manager for Event Schedule.";
	if( select( "Read Rules" ) ){
		next;
		mes "^0055FF[ ::Rules:: ]^000000";
		for( .@i = 0; .@i < .rule_size; .@i++ )
			mes ""+.rules$[.@i];
	}
	close;

	OnInit:
		.winner_format$ = "[ %s ] Congratz, %s. | Time: %d.%03d second ";
		.max_round = 10;
		setarray .rules$,
			"This is a Keyboard Warrior Event",
			"I will show random words.",
			"All you have to do is..., type out what I show to you.",
			"First player who enter the words I shown, Win for that Round.",
			"Otherwise, all lose..",
			"Prepare yourself, event is going to start now...",
			"Thank you";
		.rule_size = getarraysize( .rules$ );
		.npc_name$ = strnpcinfo(0);
		// getmapxy( .npc_map$,.npc_x,.npc_y, UNITTYPE_NPC );

		.string$ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890";
		.string_length = getstrlen( .string$ );
		hideonnpc .npc_name$;
		end;

	OnWhisperGlobal:
		if( getgmlevel() < 99 ) end;
		detachrid;
		
	OnStartKBE:
	OnEventStart:
		if( !.status ){
			donpcevent "eventmanager::OnStartEvent";
			.status = 1;
			hideoffnpc .npc_name$;
			// movenpc .npc_name$,168,100;
			
			announce "[ Event Manager ]: The Keyboard Warrior Event will begin in 1 minute. use @joinevent to join.",bc_all|bc_blue;
			sleep 60000;
			
			announce "[ Event Manager ]: The Keyboard Warrior Event has begun! Use @joinevent to join.",bc_all|bc_blue;
			for( .@i = 0 ; .@i < .rule_size && .status ; .@i++ ){
				npctalk .rules$[.@i];
				sleep 3500;
			}
			if( .status ) .@current_round = .max_round;
			while( .@current_round && .status ){
				.@current_round--;
				npctalk ( ( .@size == 1 )?"Last ":"" )+"Round # "+( .max_round - .@current_round );
				.@index = rand( .@size );
				sleep 6000;
				.answer$ = string_random( rand( 11,14 ) );
				deletepset 1000;
				defpattern 1000,"([^:]+):.\\s*"+.answer$+".*", "OnCorrect";
				activatepset 1000;
				
				consolemes(CONSOLEMES_WARNING,""+.answer$);
				// specialeffect EF_M03;
				// specialeffect EF_SPR_SOULE;
				sleep 100;
				// setnpcdisplay( .npc_name$,.@mob_id[.@index] );
				
				delwaitingroom;
				waitingroom ""+.answer$,0;
					
				initnpctimer;
				sleep 65000;
			}
			npctalk "That's the Last. Thank you for participating Keyboard Warrior Event.";
			// setnpcdisplay( .npc_name$,607 );
			delwaitingroom;
			stopnpctimer;
			deactivatepset 1000;
			donpcevent "eventmanager::OnEndEvent";
			.status = 0;
			// movenpc .npc_name$,.npc_x,.npc_y;
			hideonnpc .npc_name$;
		}
		end;

	OnEventEnd:
		.status = 0;
		awake .npc_name$;
		end;
		
	OnTimer30000:
		.@time += 10;
	OnTimer20000:
		.@time += 10;
	OnTimer10000:
		.@time += 10;
		npctalk .@time+" second passed.";
		specialeffect EF_NPC_SLOWCAST;
		end;
	OnTimer40000:
	OnTimer50000:
		npctalk "You're running out of Time.";
		specialeffect EF_NPC_SLOWCAST;
		end;
		
	OnTimer58000:
		delwaitingroom;
		stopnpctimer;
		deletepset 1000;
		npctalk "Time' UP. 60 second passed.";
		specialeffect EF_NPC_SLOWCAST;
		sleep 2000;
		awake .npc_name$;
		end;
			
	OnCorrect:
		// debugmes "This Round Answer = "+.answer$;
		// for ( .@i = 0; .@i <= 3; .@i++ ) {
			// debugmes " > $@p"+.@i+"$ = "+getd( "$@p"+.@i+"$" );
		// }
		if( !compare( $@p0$,.answer$ ) ){
			dispbottom "[Keyboard Warrior Fairy] Incorrect, try again.";
		}
		else{
			delwaitingroom;
			// setnpcdisplay( .npc_name$,607 );
			specialeffect EF_ABSORBSPIRITS;
			stopnpctimer;
			deletepset 1000;
			if( .status ){
				.@time = getnpctimer(0);
				npctalk sprintf( .winner_format$,.answer$,strcharinfo(0),( .@time / 1000 ),( .@time % 1000 ) );
				getitem 12281,1;
				// #CASHPOINTS += 1;
				// dispbottom "[Keyboard Warrior Fairy] Obtained 1 Cash.";
				emotion e_grat;
				sleep2 3000;
			}
			else{
				dispbottom "Sorry, but Event has been terminated.";
			}
			awake .npc_name$;
		}
		end;
		
	function	string_random	{
		.@length = getarg( 0 );
		while( .@i < .@length ){
			.@string$ = .@string$ + charat( .string$,rand( .string_length ) );
			.@i++;
		}
		return .@string$;
	}
}